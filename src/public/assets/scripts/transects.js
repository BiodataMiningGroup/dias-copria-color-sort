angular.module("dias.transects").factory("ColorSortSequence",["$resource","URL",function(e,o){"use strict";return e(o+"/api/v1/transects/:transect_id/color-sort-sequence/:color",{},{get:{method:"GET",isArray:!0},request:{method:"POST"}})}]),angular.module("dias.transects").controller("SortByColorController",["$scope","ColorSortSequence","$interval","msg","TRANSECT_ID","sort",function(e,o,r,t,n,c){"use strict";var s="color-",i="color-colors",a="color-sequence-",u="color-is-computing",l=5e3,f=!1;e.hasCache(i)||(f=!0,e.setCache(i,o.query({transect_id:n},function(){f=!1})));var g=e.getCache(i);e.hasCache(u)||e.setCache(u,!1);var C=function(o){e.setCache(u,o)},h=function(){e.setLoading(!1)},v=function(c){var s,i=a+c,u=function(o){o.length>0&&(r.cancel(s),C(!1),e.setCache(i,o),g.push(c),t.success("The new color is now available for sorting."))},f=function(e){r.cancel(s),C(!1),404===e.status?t.danger("The COPRIA pipeline for computing a new color sort sequence failed."):t.responseError(e)},h=function(){o.get({transect_id:n,color:c},u,f)};s=r(h,l)};e["new"]={color:"#000000"},e.toggle=function(r){var c=s+r;if(!e.active(c)){var i=a+r;e.hasCache(i)||(e.setLoading(!0),e.setCache(i,o.get({transect_id:n,color:r},h,t.responseError))),e.getCache(i).$promise.then(function(o){e.activateSorter(c,o)})}},e.active=function(e){if(e)return c.isSorterActive(s+e);for(var o=g.length-1;o>=0;o--)if(c.isSorterActive(s+g[o]))return!0;return!1},e.hasColors=function(){return g.length>0},e.getColors=function(){return g},e.isFetchingColors=function(){return f},e.isComputingNewColor=function(){return e.getCache(u)},e.canRequestNewColor=function(){return!e.isFetchingColors()&&!e.isComputingNewColor()},e.requestNewColor=function(){if(e.canRequestNewColor()){var r=e["new"].color.substring(1),c=function(){C(!0),v(r)},s=function(e){405===e.status?t.warning("This color is already available (or still computing)."):t.responseError(e)};o.request({transect_id:n},{color:r},c,s)}}}]);