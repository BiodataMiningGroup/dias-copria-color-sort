angular.module("biigle.volumes").controller("SortByColorController",["$scope","ColorSortSequence","$interval","msg","VOLUME_ID","sort",function(e,o,r,t,n,c){"use strict";var i="color-",s="color-colors",u="color-sequence-",l="color-is-computing",a=5e3,g=!1;e.hasCache(s)||(g=!0,e.setCache(s,o.query({volume_id:n},function(){g=!1})));var f=e.getCache(s);e.hasCache(l)||e.setCache(l,!1);var h=function(o){e.setCache(l,o)},C=function(){e.setLoading(!1)},v=function(c){var i,s=u+c,l=function(o){o.length>0&&(r.cancel(i),h(!1),e.setCache(s,o),f.push(c),t.success("The new color is now available for sorting."))},g=function(e){r.cancel(i),h(!1),404===e.status?t.danger("The COPRIA pipeline for computing a new color sort sequence failed."):t.responseError(e)},C=function(){o.get({volume_id:n,color:c},l,g)};i=r(C,a)};e["new"]={color:"#000000"},e.toggle=function(r){var c=i+r;if(!e.active(c)){var s=u+r;e.hasCache(s)||(e.setLoading(!0),e.setCache(s,o.get({volume_id:n,color:r},C,t.responseError))),e.getCache(s).$promise.then(function(o){e.activateSorter(c,o)})}},e.active=function(e){if(e)return c.isSorterActive(i+e);for(var o=f.length-1;o>=0;o--)if(c.isSorterActive(i+f[o]))return!0;return!1},e.hasColors=function(){return f.length>0},e.getColors=function(){return f},e.isFetchingColors=function(){return g},e.isComputingNewColor=function(){return e.getCache(l)},e.canRequestNewColor=function(){return!e.isFetchingColors()&&!e.isComputingNewColor()},e.requestNewColor=function(){if(e.canRequestNewColor()){var r=e["new"].color.substring(1),c=function(){h(!0),v(r)},i=function(e){405===e.status?t.warning("This color is already available (or still computing)."):t.responseError(e)};o.request({volume_id:n},{color:r},c,i)}}}]),angular.module("biigle.volumes").factory("ColorSortSequence",["$resource","URL",function(e,o){"use strict";return e(o+"/api/v1/volumes/:volume_id/color-sort-sequence/:color",{},{get:{method:"GET",isArray:!0},request:{method:"POST"}})}]);